{"ast":null,"code":"import { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductsService = /*#__PURE__*/(() => {\n  class ProductsService {\n    constructor(http) {\n      this.http = http;\n      this.apiURLProducts = environment.apiUrl + 'products';\n    }\n    getProducts(categoriesFilter) {\n      let params = new HttpParams();\n      if (categoriesFilter) {\n        params = params.append('category', Array.isArray(categoriesFilter) ? categoriesFilter.join(',') : categoriesFilter);\n      }\n      return this.http.get(this.apiURLProducts, {\n        params: params\n      });\n    }\n    createProduct(productData) {\n      return this.http.post(this.apiURLProducts, productData);\n    }\n    getProduct(productId) {\n      let params = new HttpParams();\n      return this.http.get(`${this.apiURLProducts}/${productId}`);\n    }\n    updateProduct(productData, productId) {\n      return this.http.put(`${this.apiURLProducts}/${productId}`, productData);\n    }\n    deleteProduct(productId) {\n      return this.http.delete(`${this.apiURLProducts}/${productId}`);\n    }\n    getFeaturedProducts(count) {\n      return this.http.get(`${this.apiURLProducts}/get/featured/${count}`);\n    }\n  }\n  ProductsService.ɵfac = function ProductsService_Factory(t) {\n    return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductsService,\n    factory: ProductsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}