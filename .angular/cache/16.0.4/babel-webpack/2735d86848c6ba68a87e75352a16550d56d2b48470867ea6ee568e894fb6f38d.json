{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/adel/Documents/cource/Angular/shop/ng-shop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"C:/Users/adel/Documents/cource/Angular/shop/ng-shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i3 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, PLATFORM_ID, Injectable, Inject, EventEmitter, Input, Output, TemplateRef, Component, Optional, ContentChild, ViewChild, NgModule, inject } from '@angular/core';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject, from } from 'rxjs';\nconst _c0 = [\"stripeElementRef\"];\nfunction StripeAddressComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeAffirmMessageComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeAfterpayClearpayMessageComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeCardComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeCardNumberComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeCardExpiryComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeCardCvcComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeEpsBankComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeFpxBankComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeIbanComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeIdealBankComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeIssuingCardCvcDisplayComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeIssuingCardExpiryDisplayComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeIssuingCardNumberDisplayComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeIssuingCardPinDisplayComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeLinkAuthenticationComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeP24BankComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripeAuBankAccountComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nfunction StripePaymentMethodMessagingComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\nlet NgxStripeElementLoadingTemplateDirective = /*#__PURE__*/(() => {\n  class NgxStripeElementLoadingTemplateDirective {\n    constructor(templateRef) {\n      _defineProperty(this, \"templateRef\", void 0);\n      this.templateRef = templateRef;\n    }\n  }\n  _defineProperty(NgxStripeElementLoadingTemplateDirective, \"\\u0275fac\", function NgxStripeElementLoadingTemplateDirective_Factory(t) {\n    return new (t || NgxStripeElementLoadingTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  });\n  _defineProperty(NgxStripeElementLoadingTemplateDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgxStripeElementLoadingTemplateDirective,\n    selectors: [[\"\", \"ngxStripeLoadingTemplate\", \"\"]],\n    standalone: true\n  }));\n  return NgxStripeElementLoadingTemplateDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');\nconst STRIPE_OPTIONS = new InjectionToken('Stripe Options');\nconst NGX_STRIPE_VERSION = new InjectionToken('NGX_STRIPE_VERSION');\nclass StripeInstance {\n  constructor(version, loader, window, key, options) {\n    _defineProperty(this, \"version\", void 0);\n    _defineProperty(this, \"loader\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"key\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"stripe$\", new BehaviorSubject(undefined));\n    _defineProperty(this, \"stripe\", this.stripe$.asObservable().pipe(filter(stripe => Boolean(stripe))));\n    this.version = version;\n    this.loader = loader;\n    this.window = window;\n    this.key = key;\n    this.options = options;\n    this.loader.asStream().pipe(filter(status => status.loaded === true), first(), map(() => this.window.getNativeWindow().Stripe)).subscribe(stripeInstance => {\n      const stripe = this.options ? stripeInstance(this.key, this.options) : stripeInstance(this.key);\n      stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n      this.stripe$.next(stripe);\n    });\n  }\n  getInstance() {\n    return this.stripe$.getValue();\n  }\n  elements(options) {\n    return this.stripe.pipe(map(stripe => stripe.elements(options)), first());\n  }\n  redirectToCheckout(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.redirectToCheckout(options))), first());\n  }\n  confirmPayment(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayment(options))), first());\n  }\n  confirmAcssDebitPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAcssDebitPayment(clientSecret, data, options))), first());\n  }\n  confirmUsBankAccountPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmUsBankAccountPayment(clientSecret, data))), first());\n  }\n  confirmAlipayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAlipayPayment(clientSecret, data, options))), first());\n  }\n  confirmAuBecsDebitPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAuBecsDebitPayment(clientSecret, data))), first());\n  }\n  confirmBancontactPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBancontactPayment(clientSecret, data, options))), first());\n  }\n  confirmBlikPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBlikPayment(clientSecret, data, options))), first());\n  }\n  confirmBoletoPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBoletoPayment(clientSecret, data, options))), first());\n  }\n  confirmCardPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCardPayment(clientSecret, data, options))), first());\n  }\n  confirmCashappPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCashappPayment(clientSecret, data, options))), first());\n  }\n  confirmCustomerBalancePayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCustomerBalancePayment(clientSecret, data, options))), first());\n  }\n  confirmEpsPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmEpsPayment(clientSecret, data, options))), first());\n  }\n  confirmFpxPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmFpxPayment(clientSecret, data, options))), first());\n  }\n  confirmGiropayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmGiropayPayment(clientSecret, data, options))), first());\n  }\n  confirmGrabPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmGrabPayPayment(clientSecret, data, options))), first());\n  }\n  confirmIdealPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmIdealPayment(clientSecret, data, options))), first());\n  }\n  confirmKlarnaPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmKlarnaPayment(clientSecret, data, options))), first());\n  }\n  confirmKonbiniPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmKonbiniPayment(clientSecret, data, options))), first());\n  }\n  confirmOxxoPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmOxxoPayment(clientSecret, data, options))), first());\n  }\n  confirmP24Payment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmP24Payment(clientSecret, data, options))), first());\n  }\n  confirmPayNowPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayNowPayment(clientSecret, data, options))), first());\n  }\n  confirmPayPalPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayPalPayment(clientSecret, data))), first());\n  }\n  confirmPixPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPixPayment(clientSecret, data, options))), first());\n  }\n  confirmPromptPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPromptPayPayment(clientSecret, data, options))), first());\n  }\n  confirmSepaDebitPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSepaDebitPayment(clientSecret, data))), first());\n  }\n  confirmSofortPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSofortPayment(clientSecret, data, options))), first());\n  }\n  confirmWechatPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmWechatPayPayment(clientSecret, data, options))), first());\n  }\n  handleCardAction(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardAction(clientSecret))), first());\n  }\n  handleNextAction(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleNextAction(options))), first());\n  }\n  verifyMicrodepositsForPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyMicrodepositsForPayment(clientSecret, data))), first());\n  }\n  createRadarSession() {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createRadarSession())), first());\n  }\n  collectBankAccountForPayment(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.collectBankAccountForPayment(options))), first());\n  }\n  createPaymentMethod(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createPaymentMethod(options))), first());\n  }\n  retrievePaymentIntent(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrievePaymentIntent(clientSecret))), first());\n  }\n  confirmSetup(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSetup(options))), first());\n  }\n  confirmAcssDebitSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAcssDebitSetup(clientSecret, data, options))), first());\n  }\n  confirmUsBankAccountSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmUsBankAccountSetup(clientSecret, data))), first());\n  }\n  confirmAuBecsDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAuBecsDebitSetup(clientSecret, data))), first());\n  }\n  confirmBacsDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBacsDebitSetup(clientSecret, data))), first());\n  }\n  confirmBancontactSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBancontactSetup(clientSecret, data))), first());\n  }\n  confirmCardSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCardSetup(clientSecret, data, options))), first());\n  }\n  confirmCashappSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCashappSetup(clientSecret, data, options))), first());\n  }\n  confirmIdealSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmIdealSetup(clientSecret, data))), first());\n  }\n  confirmPayPalSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayPalSetup(clientSecret, data))), first());\n  }\n  confirmSepaDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSepaDebitSetup(clientSecret, data))), first());\n  }\n  confirmSofortSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSofortSetup(clientSecret, data, options))), first());\n  }\n  confirmAffirmPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAffirmPayment(clientSecret, data, options))), first());\n  }\n  confirmAfterpayClearpayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))), first());\n  }\n  verifyMicrodepositsForSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyMicrodepositsForSetup(clientSecret, data))), first());\n  }\n  collectBankAccountForSetup(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.collectBankAccountForSetup(options))), first());\n  }\n  retrieveSetupIntent(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveSetupIntent(clientSecret))), first());\n  }\n  processOrder(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.processOrder(options))), first());\n  }\n  retrieveOrder(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveOrder(clientSecret))), first());\n  }\n  paymentRequest(options) {\n    const stripe = this.getInstance();\n    return stripe.paymentRequest(options);\n  }\n  createToken(tokenType, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createToken(tokenType, data))), first());\n  }\n  createSource(a, b) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createSource(a, b))), first());\n  }\n  retrieveSource(source) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveSource(source))), first());\n  }\n  verifyIdentity(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyIdentity(clientSecret))), first());\n  }\n  collectFinancialConnectionsAccounts(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.collectFinancialConnectionsAccounts(options))), first());\n  }\n  collectBankAccountToken(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.collectBankAccountToken(options))), first());\n  }\n  createEphemeralKeyNonce(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createEphemeralKeyNonce(options))), first());\n  }\n  /**\n   * @deprecated\n   */\n  handleCardPayment(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardPayment(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPaymentIntent(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n  handleCardSetup(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardSetup(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSetupIntent(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleFpxPayment(clientSecret, element, data))), first());\n  }\n  getNgxStripeAppInfo(version) {\n    return {\n      name: 'ngx-stripe',\n      url: 'https://ngx-stripe.dev',\n      partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n      version\n    };\n  }\n}\nlet WindowRef = /*#__PURE__*/(() => {\n  class WindowRef {\n    constructor(platformId) {\n      _defineProperty(this, \"platformId\", void 0);\n      this.platformId = platformId;\n    }\n    getNativeWindow() {\n      if (isPlatformBrowser(this.platformId)) {\n        return window;\n      }\n      return {};\n    }\n  }\n  _defineProperty(WindowRef, \"\\u0275fac\", function WindowRef_Factory(t) {\n    return new (t || WindowRef)(i0.ɵɵinject(PLATFORM_ID));\n  });\n  _defineProperty(WindowRef, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: WindowRef,\n    factory: WindowRef.ɵfac\n  }));\n  return WindowRef;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DocumentRef = /*#__PURE__*/(() => {\n  class DocumentRef {\n    constructor(platformId) {\n      _defineProperty(this, \"platformId\", void 0);\n      this.platformId = platformId;\n    }\n    getNativeDocument() {\n      if (isPlatformBrowser(this.platformId)) {\n        return document;\n      }\n      return {};\n    }\n  }\n  _defineProperty(DocumentRef, \"\\u0275fac\", function DocumentRef_Factory(t) {\n    return new (t || DocumentRef)(i0.ɵɵinject(PLATFORM_ID));\n  });\n  _defineProperty(DocumentRef, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DocumentRef,\n    factory: DocumentRef.ɵfac\n  }));\n  return DocumentRef;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LazyStripeAPILoader = /*#__PURE__*/(() => {\n  class LazyStripeAPILoader {\n    constructor(platformId, window, document) {\n      _defineProperty(this, \"platformId\", void 0);\n      _defineProperty(this, \"window\", void 0);\n      _defineProperty(this, \"document\", void 0);\n      _defineProperty(this, \"status\", new BehaviorSubject({\n        error: false,\n        loaded: false,\n        loading: false\n      }));\n      this.platformId = platformId;\n      this.window = window;\n      this.document = document;\n    }\n    asStream() {\n      this.load();\n      return this.status.asObservable();\n    }\n    isReady() {\n      return this.status.getValue().loaded;\n    }\n    load() {\n      if (isPlatformServer(this.platformId)) {\n        return;\n      }\n      const status = this.status.getValue();\n      if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      } else if (!status.loaded && !status.loading) {\n        this.status.next({\n          ...status,\n          loading: true\n        });\n        const script = this.document.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.src = 'https://js.stripe.com/v3/';\n        script.onload = () => {\n          this.status.next({\n            error: false,\n            loaded: true,\n            loading: false\n          });\n        };\n        script.onerror = () => {\n          this.status.next({\n            error: true,\n            loaded: false,\n            loading: false\n          });\n        };\n        this.document.getNativeDocument().body.appendChild(script);\n      }\n    }\n  }\n  _defineProperty(LazyStripeAPILoader, \"\\u0275fac\", function LazyStripeAPILoader_Factory(t) {\n    return new (t || LazyStripeAPILoader)(i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(WindowRef), i0.ɵɵinject(DocumentRef));\n  });\n  _defineProperty(LazyStripeAPILoader, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: LazyStripeAPILoader,\n    factory: LazyStripeAPILoader.ɵfac\n  }));\n  return LazyStripeAPILoader;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeService = /*#__PURE__*/(() => {\n  class StripeService {\n    constructor(version, key, options, loader, window) {\n      _defineProperty(this, \"version\", void 0);\n      _defineProperty(this, \"key\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"loader\", void 0);\n      _defineProperty(this, \"window\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      this.version = version;\n      this.key = key;\n      this.options = options;\n      this.loader = loader;\n      this.window = window;\n      if (key) {\n        this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n      }\n    }\n    getStripeReference() {\n      return this.loader.asStream().pipe(filter(status => status.loaded === true), map(() => this.window.getNativeWindow().Stripe));\n    }\n    getInstance() {\n      return this.stripe.getInstance();\n    }\n    setKey(key, options) {\n      return this.changeKey(key, options);\n    }\n    changeKey(key, options) {\n      this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n      return this.stripe;\n    }\n    elements(options) {\n      return this.stripe.elements(options);\n    }\n    redirectToCheckout(options) {\n      return this.stripe.redirectToCheckout(options);\n    }\n    confirmPayment(options) {\n      return this.stripe.confirmPayment(options);\n    }\n    confirmAcssDebitPayment(clientSecret, data, options) {\n      return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n    }\n    confirmUsBankAccountPayment(clientSecret, data) {\n      return this.stripe.confirmUsBankAccountPayment(clientSecret, data);\n    }\n    confirmAlipayPayment(clientSecret, data, options) {\n      return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n    }\n    confirmAuBecsDebitPayment(clientSecret, data) {\n      return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n    }\n    confirmBancontactPayment(clientSecret, data, options) {\n      return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n    }\n    confirmBlikPayment(clientSecret, data, options) {\n      return this.stripe.confirmBlikPayment(clientSecret, data, options);\n    }\n    confirmBoletoPayment(clientSecret, data, options) {\n      return this.stripe.confirmBoletoPayment(clientSecret, data, options);\n    }\n    confirmCardPayment(clientSecret, data, options) {\n      return this.stripe.confirmCardPayment(clientSecret, data, options);\n    }\n    confirmCashappPayment(clientSecret, data, options) {\n      return this.stripe.confirmCashappPayment(clientSecret, data, options);\n    }\n    confirmCustomerBalancePayment(clientSecret, data, options) {\n      return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);\n    }\n    confirmEpsPayment(clientSecret, data, options) {\n      return this.stripe.confirmEpsPayment(clientSecret, data, options);\n    }\n    confirmFpxPayment(clientSecret, data, options) {\n      return this.stripe.confirmFpxPayment(clientSecret, data, options);\n    }\n    confirmGiropayPayment(clientSecret, data, options) {\n      return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n    }\n    confirmGrabPayPayment(clientSecret, data, options) {\n      return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n    }\n    confirmIdealPayment(clientSecret, data, options) {\n      return this.stripe.confirmIdealPayment(clientSecret, data, options);\n    }\n    confirmKlarnaPayment(clientSecret, data, options) {\n      return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n    }\n    confirmKonbiniPayment(clientSecret, data, options) {\n      return this.stripe.confirmKonbiniPayment(clientSecret, data, options);\n    }\n    confirmOxxoPayment(clientSecret, data, options) {\n      return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n    }\n    confirmP24Payment(clientSecret, data, options) {\n      return this.stripe.confirmP24Payment(clientSecret, data, options);\n    }\n    confirmPayNowPayment(clientSecret, data, options) {\n      return this.stripe.confirmPayNowPayment(clientSecret, data, options);\n    }\n    confirmPayPalPayment(clientSecret, data) {\n      return this.stripe.confirmPayPalPayment(clientSecret, data);\n    }\n    confirmPixPayment(clientSecret, data, options) {\n      return this.stripe.confirmPixPayment(clientSecret, data, options);\n    }\n    confirmPromptPayPayment(clientSecret, data, options) {\n      return this.stripe.confirmPromptPayPayment(clientSecret, data, options);\n    }\n    confirmSepaDebitPayment(clientSecret, data) {\n      return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n    }\n    confirmSofortPayment(clientSecret, data, options) {\n      return this.stripe.confirmSofortPayment(clientSecret, data, options);\n    }\n    confirmWechatPayPayment(clientSecret, data, options) {\n      return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n    }\n    handleCardAction(clientSecret) {\n      return this.stripe.handleCardAction(clientSecret);\n    }\n    handleNextAction(options) {\n      return this.stripe.handleNextAction(options);\n    }\n    verifyMicrodepositsForPayment(clientSecret, data) {\n      return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n    }\n    createRadarSession() {\n      return this.stripe.createRadarSession();\n    }\n    collectBankAccountForPayment(options) {\n      return this.stripe.collectBankAccountForPayment(options);\n    }\n    createPaymentMethod(options) {\n      return this.stripe.createPaymentMethod(options);\n    }\n    retrievePaymentIntent(clientSecret) {\n      return this.stripe.retrievePaymentIntent(clientSecret);\n    }\n    confirmSetup(options) {\n      return this.stripe.confirmSetup(options);\n    }\n    confirmAcssDebitSetup(clientSecret, data, options) {\n      return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n    }\n    confirmUsBankAccountSetup(clientSecret, data) {\n      return this.stripe.confirmUsBankAccountSetup(clientSecret, data);\n    }\n    confirmAuBecsDebitSetup(clientSecret, data) {\n      return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n    }\n    confirmBacsDebitSetup(clientSecret, data) {\n      return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n    }\n    confirmBancontactSetup(clientSecret, data) {\n      return this.stripe.confirmBancontactSetup(clientSecret, data);\n    }\n    confirmCardSetup(clientSecret, data, options) {\n      return this.stripe.confirmCardSetup(clientSecret, data, options);\n    }\n    confirmCashappSetup(clientSecret, data, options) {\n      return this.stripe.confirmCashappSetup(clientSecret, data, options);\n    }\n    confirmIdealSetup(clientSecret, data) {\n      return this.stripe.confirmIdealSetup(clientSecret, data);\n    }\n    confirmPayPalSetup(clientSecret, data) {\n      return this.stripe.confirmPayPalSetup(clientSecret, data);\n    }\n    confirmSepaDebitSetup(clientSecret, data) {\n      return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n    }\n    confirmSofortSetup(clientSecret, data, options) {\n      return this.stripe.confirmSofortSetup(clientSecret, data, options);\n    }\n    confirmAffirmPayment(clientSecret, data, options) {\n      return this.stripe.confirmAffirmPayment(clientSecret, data, options);\n    }\n    confirmAfterpayClearpayPayment(clientSecret, data, options) {\n      return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n    }\n    verifyMicrodepositsForSetup(clientSecret, data) {\n      return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n    }\n    collectBankAccountForSetup(options) {\n      return this.stripe.collectBankAccountForSetup(options);\n    }\n    retrieveSetupIntent(clientSecret) {\n      return this.stripe.retrieveSetupIntent(clientSecret);\n    }\n    processOrder(options) {\n      return this.stripe.processOrder(options);\n    }\n    retrieveOrder(clientSecret) {\n      return this.stripe.retrieveOrder(clientSecret);\n    }\n    paymentRequest(options) {\n      return this.stripe.paymentRequest(options);\n    }\n    createToken(tokenType, data) {\n      return this.stripe.createToken(tokenType, data);\n    }\n    createSource(a, b) {\n      return this.stripe.createSource(a, b);\n    }\n    retrieveSource(source) {\n      return this.stripe.retrieveSource(source);\n    }\n    verifyIdentity(clientSecret) {\n      return this.stripe.verifyIdentity(clientSecret);\n    }\n    collectFinancialConnectionsAccounts(options) {\n      return this.stripe.collectFinancialConnectionsAccounts(options);\n    }\n    collectBankAccountToken(options) {\n      return this.stripe.collectBankAccountToken(options);\n    }\n    createEphemeralKeyNonce(options) {\n      return this.stripe.createEphemeralKeyNonce(options);\n    }\n    /**\n     * @deprecated\n     */\n    handleCardPayment(clientSecret, element, data) {\n      return this.stripe.handleCardPayment(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n      return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    handleCardSetup(clientSecret, element, data) {\n      return this.stripe.handleCardSetup(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n      return this.stripe.confirmSetupIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    handleFpxPayment(clientSecret, element, data) {\n      return this.stripe.handleFpxPayment(clientSecret, element, data);\n    }\n  }\n  _defineProperty(StripeService, \"\\u0275fac\", function StripeService_Factory(t) {\n    return new (t || StripeService)(i0.ɵɵinject(NGX_STRIPE_VERSION), i0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), i0.ɵɵinject(STRIPE_OPTIONS), i0.ɵɵinject(LazyStripeAPILoader), i0.ɵɵinject(WindowRef));\n  });\n  _defineProperty(StripeService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: StripeService,\n    factory: StripeService.ɵfac\n  }));\n  return StripeService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeElementsService = /*#__PURE__*/(() => {\n  class StripeElementsService {\n    constructor(stripeService) {\n      _defineProperty(this, \"stripeService\", void 0);\n      this.stripeService = stripeService;\n    }\n    elements(stripe, options = {}) {\n      if (stripe) {\n        if (Object.keys(options).length > 0) {\n          return stripe.elements(options);\n        }\n        return stripe.elements();\n      } else {\n        if (Object.keys(options).length > 0) {\n          return this.stripeService.elements(options);\n        }\n        return this.stripeService.elements();\n      }\n    }\n    paymentRequest(stripe, options) {\n      return stripe ? stripe.paymentRequest(options) : this.stripeService.paymentRequest(options);\n    }\n    mergeOptions(options, containerClass) {\n      if (!containerClass || options && options.classes) {\n        return options || {};\n      }\n      if (!options || !options.classes) {\n        return {\n          ...(options || {}),\n          classes: {\n            base: containerClass,\n            complete: `${containerClass}--complete`,\n            empty: `${containerClass}--empty`,\n            focus: `${containerClass}--focus`,\n            invalid: `${containerClass}--invalid`,\n            webkitAutoFill: `${containerClass}--webkit-autoFill`\n          }\n        };\n      }\n      return options || {};\n    }\n  }\n  _defineProperty(StripeElementsService, \"\\u0275fac\", function StripeElementsService_Factory(t) {\n    return new (t || StripeElementsService)(i0.ɵɵinject(StripeService));\n  });\n  _defineProperty(StripeElementsService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: StripeElementsService,\n    factory: StripeElementsService.ɵfac\n  }));\n  return StripeElementsService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeElementsDirective = /*#__PURE__*/(() => {\n  class StripeElementsDirective {\n    constructor(stripeElementsService) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"elements\", new EventEmitter());\n      _defineProperty(this, \"_elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      this.stripeElementsService = stripeElementsService;\n    }\n    ngOnChanges(changes) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.state = 'starting';\n        const elementsOptions = _this.elementsOptions;\n        const stripe = _this.stripe;\n        if (changes.elementsOptions || changes.stripe || !_this._elements) {\n          _this._elements = yield _this.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n          _this.elements.emit(_this._elements);\n        }\n        _this.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        if (_this2.state === 'notready') {\n          _this2.state = 'starting';\n          _this2._elements = yield _this2.stripeElementsService.elements(_this2.stripe).toPromise();\n          _this2.elements.emit(_this2._elements);\n          _this2.state = 'ready';\n        }\n      })();\n    }\n  }\n  _defineProperty(StripeElementsDirective, \"\\u0275fac\", function StripeElementsDirective_Factory(t) {\n    return new (t || StripeElementsDirective)(i0.ɵɵdirectiveInject(StripeElementsService));\n  });\n  _defineProperty(StripeElementsDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: StripeElementsDirective,\n    selectors: [[\"ngx-stripe-elements\"], [\"\", \"ngxStripeElements\", \"\"]],\n    inputs: {\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      elements: \"elements\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  }));\n  return StripeElementsDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeAddressComponent = /*#__PURE__*/(() => {\n  class StripeAddressComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"loaderror\", new EventEmitter());\n      _defineProperty(this, \"loaderstart\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        _this3.state = 'starting';\n        let updateElements = false;\n        if (!_this3.elementsProvider && (changes.elementsOptions || changes.stripe || !_this3.elements)) {\n          _this3.elements = yield _this3.stripeElementsService.elements(_this3.stripe, _this3.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this3.stripeElementsService.mergeOptions(_this3.options, _this3.containerClass);\n        if (changes.options || changes.containerClass || !_this3.element || updateElements) {\n          if (_this3.element && !updateElements) {\n            _this3.update(options);\n          } else if (_this3.elements && updateElements) {\n            _this3.createElement(options);\n          }\n        }\n        _this3.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this4.stripeElementsService.mergeOptions(_this4.options, _this4.containerClass);\n        if (_this4.elementsProvider) {\n          _this4.elementsSubscription = _this4.elementsProvider.elements.subscribe(elements => {\n            _this4.elements = elements;\n            _this4.createElement(options);\n            _this4.state = 'ready';\n          });\n        } else if (_this4.state === 'notready') {\n          _this4.state = 'starting';\n          _this4.elements = yield _this4.stripeElementsService.elements(_this4.stripe).toPromise();\n          _this4.createElement(options);\n          _this4.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      return this.element.update(options);\n    }\n    getValue() {\n      const address = this.elements.getElement('address');\n      return address.getValue();\n    }\n    /**\n     * @deprecated\n     */\n    getAddressElement() {\n      return this.element;\n    }\n    createElement(options) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('address', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.on('loaderror', () => this.loaderror.emit());\n      this.element.on('loaderstart', () => this.loaderstart.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeAddressComponent, \"\\u0275fac\", function StripeAddressComponent_Factory(t) {\n    return new (t || StripeAddressComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeAddressComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeAddressComponent,\n    selectors: [[\"ngx-stripe-address\"]],\n    contentQueries: function StripeAddressComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeAddressComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\",\n      loaderror: \"loaderror\",\n      loaderstart: \"loaderstart\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeAddressComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeAddressComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeAddressComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeAffirmMessageComponent = /*#__PURE__*/(() => {\n  class StripeAffirmMessageComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        _this5.state = 'starting';\n        let updateElements = false;\n        if (!_this5.elementsProvider && (changes.elementsOptions || changes.stripe || !_this5.elements)) {\n          _this5.elements = yield _this5.stripeElementsService.elements(_this5.stripe, _this5.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this5.stripeElementsService.mergeOptions(_this5.options, _this5.containerClass);\n        if (changes.options || changes.containerClass || !_this5.element || updateElements) {\n          if (_this5.element && !updateElements) {\n            _this5.update(options);\n          } else if (_this5.elements && updateElements) {\n            _this5.createElement(options);\n          }\n        }\n        _this5.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this6 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this6.stripeElementsService.mergeOptions(_this6.options, _this6.containerClass);\n        if (_this6.elementsProvider) {\n          _this6.elementsSubscription = _this6.elementsProvider.elements.subscribe(elements => {\n            _this6.elements = elements;\n            _this6.createElement(options);\n            _this6.state = 'ready';\n          });\n        } else if (_this6.state === 'notready') {\n          _this6.state = 'starting';\n          _this6.elements = yield _this6.stripeElementsService.elements(_this6.stripe).toPromise();\n          _this6.createElement(options);\n          _this6.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getAffirmMessage() {\n      return this.element;\n    }\n    createElement(options) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('affirmMessage', options);\n      this.element.on('ready', () => this.ready.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeAffirmMessageComponent, \"\\u0275fac\", function StripeAffirmMessageComponent_Factory(t) {\n    return new (t || StripeAffirmMessageComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeAffirmMessageComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeAffirmMessageComponent,\n    selectors: [[\"ngx-stripe-affirm-message\"]],\n    contentQueries: function StripeAffirmMessageComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeAffirmMessageComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      ready: \"ready\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeAffirmMessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeAffirmMessageComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeAffirmMessageComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeAfterpayClearpayMessageComponent = /*#__PURE__*/(() => {\n  class StripeAfterpayClearpayMessageComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this7 = this;\n      return _asyncToGenerator(function* () {\n        _this7.state = 'starting';\n        let updateElements = false;\n        if (!_this7.elementsProvider && (changes.elementsOptions || changes.stripe || !_this7.elements)) {\n          _this7.elements = yield _this7.stripeElementsService.elements(_this7.stripe, _this7.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this7.stripeElementsService.mergeOptions(_this7.options, _this7.containerClass);\n        if (changes.options || changes.containerClass || !_this7.element || updateElements) {\n          if (_this7.element && !updateElements) {\n            _this7.update(options);\n          } else if (_this7.elements && updateElements) {\n            _this7.createElement(options);\n          }\n        }\n        _this7.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this8 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this8.stripeElementsService.mergeOptions(_this8.options, _this8.containerClass);\n        if (_this8.elementsProvider) {\n          _this8.elementsSubscription = _this8.elementsProvider.elements.subscribe(elements => {\n            _this8.elements = elements;\n            _this8.createElement(options);\n            _this8.state = 'ready';\n          });\n        } else if (_this8.state === 'notready') {\n          _this8.state = 'starting';\n          _this8.elements = yield _this8.stripeElementsService.elements(_this8.stripe).toPromise();\n          _this8.createElement(options);\n          _this8.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getAfterpayClearpayMessage() {\n      return this.element;\n    }\n    createElement(options) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('afterpayClearpayMessage', options);\n      this.element.on('ready', () => this.ready.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeAfterpayClearpayMessageComponent, \"\\u0275fac\", function StripeAfterpayClearpayMessageComponent_Factory(t) {\n    return new (t || StripeAfterpayClearpayMessageComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeAfterpayClearpayMessageComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeAfterpayClearpayMessageComponent,\n    selectors: [[\"ngx-stripe-afterpay-clearpay-message\"]],\n    contentQueries: function StripeAfterpayClearpayMessageComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeAfterpayClearpayMessageComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      ready: \"ready\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeAfterpayClearpayMessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeAfterpayClearpayMessageComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeAfterpayClearpayMessageComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeCardComponent = /*#__PURE__*/(() => {\n  class StripeCardComponent {\n    constructor(cdr, stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.cdr = cdr;\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this9 = this;\n      return _asyncToGenerator(function* () {\n        _this9.state = 'starting';\n        let updateElements = false;\n        if (!_this9.elementsProvider && (changes.elementsOptions || changes.stripe || !_this9.elements)) {\n          _this9.elements = yield _this9.stripeElementsService.elements(_this9.stripe, _this9.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this9.stripeElementsService.mergeOptions(_this9.options, _this9.containerClass);\n        if (changes.options || changes.containerClass || !_this9.element || updateElements) {\n          if (_this9.element && !updateElements) {\n            _this9.update(options);\n          } else if (_this9.elements && updateElements) {\n            _this9.createElement(options);\n          }\n        }\n      })();\n    }\n    ngOnInit() {\n      var _this10 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this10.stripeElementsService.mergeOptions(_this10.options, _this10.containerClass);\n        if (_this10.elementsProvider) {\n          _this10.elementsSubscription = _this10.elementsProvider.elements.subscribe(elements => {\n            _this10.elements = elements;\n            _this10.createElement(options);\n          });\n        } else if (_this10.state === 'notready') {\n          _this10.state = 'starting';\n          _this10.elements = yield _this10.stripeElementsService.elements(_this10.stripe).toPromise();\n          _this10.createElement(options);\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCard() {\n      return this.element;\n    }\n    createElement(options = {}) {\n      this.state = 'ready';\n      this.cdr.detectChanges();\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('card', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeCardComponent, \"\\u0275fac\", function StripeCardComponent_Factory(t) {\n    return new (t || StripeCardComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeCardComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeCardComponent,\n    selectors: [[\"ngx-stripe-card\"]],\n    contentQueries: function StripeCardComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeCardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeCardComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeCardComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeCardGroupDirective = /*#__PURE__*/(() => {\n  class StripeCardGroupDirective {\n    constructor(stripeElementsService) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"elements\", new EventEmitter());\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"_elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      this.stripeElementsService = stripeElementsService;\n    }\n    ngOnChanges(changes) {\n      var _this11 = this;\n      return _asyncToGenerator(function* () {\n        _this11.state = 'starting';\n        const elementsOptions = _this11.elementsOptions;\n        const stripe = _this11.stripe;\n        if (changes.elementsOptions || changes.stripe || !_this11._elements) {\n          _this11._elements = yield _this11.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n          _this11.elements.emit(_this11._elements);\n        }\n        _this11.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this12 = this;\n      return _asyncToGenerator(function* () {\n        if (_this12.state === 'notready') {\n          _this12.state = 'starting';\n          _this12._elements = yield _this12.stripeElementsService.elements(_this12.stripe).toPromise();\n          _this12.elements.emit(_this12._elements);\n          _this12.state = 'ready';\n        }\n      })();\n    }\n  }\n  _defineProperty(StripeCardGroupDirective, \"\\u0275fac\", function StripeCardGroupDirective_Factory(t) {\n    return new (t || StripeCardGroupDirective)(i0.ɵɵdirectiveInject(StripeElementsService));\n  });\n  _defineProperty(StripeCardGroupDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: StripeCardGroupDirective,\n    selectors: [[\"ngx-stripe-card-group\"], [\"\", \"ngxStripeCardGroup\", \"\"]],\n    inputs: {\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      elements: \"elements\",\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  }));\n  return StripeCardGroupDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeCardNumberComponent = /*#__PURE__*/(() => {\n  class StripeCardNumberComponent {\n    constructor(stripeElementsService, cardGroup) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"cardGroup\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"cardGroupSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.cardGroup = cardGroup;\n    }\n    ngOnChanges(changes) {\n      var _this13 = this;\n      return _asyncToGenerator(function* () {\n        if (changes.options || changes.containerClass) {\n          _this13.setupElement('options');\n        }\n      })();\n    }\n    ngOnInit() {\n      if (this.cardGroup) {\n        this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n          this.elements = elements;\n          this.setupElement('elements');\n        });\n      } else {\n        throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective parent');\n      }\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.cardGroupSubscription) {\n        this.cardGroupSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardNumber() {\n      return this.element;\n    }\n    setupElement(source) {\n      const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n      if (this.element && source === 'options') {\n        this.update(options);\n      } else if (this.elements && source === 'elements') {\n        this.element = this.elements.create('cardNumber', options);\n        this.element.on('change', ev => {\n          this.change.emit(ev);\n          this.cardGroup?.change.emit(ev);\n        });\n        this.element.on('blur', () => {\n          this.blur.emit();\n          this.cardGroup?.blur.emit();\n        });\n        this.element.on('focus', () => {\n          this.focus.emit();\n          this.cardGroup?.focus.emit();\n        });\n        this.element.on('ready', () => {\n          this.ready.emit();\n          this.cardGroup?.ready.emit();\n        });\n        this.element.on('escape', () => {\n          this.escape.emit();\n          this.cardGroup?.escape.emit();\n        });\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n        this.cardGroup?.load.emit(this.element);\n      }\n    }\n  }\n  _defineProperty(StripeCardNumberComponent, \"\\u0275fac\", function StripeCardNumberComponent_Factory(t) {\n    return new (t || StripeCardNumberComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n  });\n  _defineProperty(StripeCardNumberComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeCardNumberComponent,\n    selectors: [[\"ngx-stripe-card-number\"]],\n    contentQueries: function StripeCardNumberComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeCardNumberComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeCardNumberComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeCardNumberComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeCardNumberComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeCardExpiryComponent = /*#__PURE__*/(() => {\n  class StripeCardExpiryComponent {\n    constructor(stripeElementsService, cardGroup) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"cardGroup\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"cardGroupSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.cardGroup = cardGroup;\n    }\n    ngOnChanges(changes) {\n      var _this14 = this;\n      return _asyncToGenerator(function* () {\n        if (changes.options || changes.containerClass) {\n          _this14.setupElement('options');\n        }\n      })();\n    }\n    ngOnInit() {\n      if (this.cardGroup) {\n        this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n          this.elements = elements;\n          this.setupElement('elements');\n        });\n      } else {\n        throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective parent');\n      }\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.cardGroupSubscription) {\n        this.cardGroupSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardExpiry() {\n      return this.element;\n    }\n    setupElement(source) {\n      const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n      if (this.element && source === 'options') {\n        this.update(options);\n      } else if (this.elements && source === 'elements') {\n        this.element = this.elements.create('cardExpiry', options);\n        this.element.on('change', ev => {\n          this.change.emit(ev);\n          this.cardGroup?.change.emit(ev);\n        });\n        this.element.on('blur', () => {\n          this.blur.emit();\n          this.cardGroup?.blur.emit();\n        });\n        this.element.on('focus', () => {\n          this.focus.emit();\n          this.cardGroup?.focus.emit();\n        });\n        this.element.on('ready', () => {\n          this.ready.emit();\n          this.cardGroup?.ready.emit();\n        });\n        this.element.on('escape', () => {\n          this.escape.emit();\n          this.cardGroup?.escape.emit();\n        });\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n        this.cardGroup?.load.emit(this.element);\n      }\n    }\n  }\n  _defineProperty(StripeCardExpiryComponent, \"\\u0275fac\", function StripeCardExpiryComponent_Factory(t) {\n    return new (t || StripeCardExpiryComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n  });\n  _defineProperty(StripeCardExpiryComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeCardExpiryComponent,\n    selectors: [[\"ngx-stripe-card-expiry\"]],\n    contentQueries: function StripeCardExpiryComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeCardExpiryComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeCardExpiryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeCardExpiryComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeCardExpiryComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeCardCvcComponent = /*#__PURE__*/(() => {\n  class StripeCardCvcComponent {\n    constructor(stripeElementsService, cardGroup) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"cardGroup\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"cardGroupSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.cardGroup = cardGroup;\n    }\n    ngOnChanges(changes) {\n      var _this15 = this;\n      return _asyncToGenerator(function* () {\n        if (changes.options || changes.containerClass) {\n          _this15.setupElement('options');\n        }\n      })();\n    }\n    ngOnInit() {\n      if (this.cardGroup) {\n        this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n          this.elements = elements;\n          this.setupElement('elements');\n        });\n      } else {\n        throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective parent');\n      }\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.cardGroupSubscription) {\n        this.cardGroupSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardCvc() {\n      return this.element;\n    }\n    setupElement(source) {\n      const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n      if (this.element && source === 'options') {\n        this.update(options);\n      } else if (this.elements && source === 'elements') {\n        this.element = this.elements.create('cardCvc', options);\n        this.element.on('change', ev => {\n          this.change.emit(ev);\n          this.cardGroup?.change.emit(ev);\n        });\n        this.element.on('blur', () => {\n          this.blur.emit();\n          this.cardGroup?.blur.emit();\n        });\n        this.element.on('focus', () => {\n          this.focus.emit();\n          this.cardGroup?.focus.emit();\n        });\n        this.element.on('ready', () => {\n          this.ready.emit();\n          this.cardGroup?.ready.emit();\n        });\n        this.element.on('escape', () => {\n          this.escape.emit();\n          this.cardGroup?.escape.emit();\n        });\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n        this.cardGroup?.load.emit(this.element);\n      }\n    }\n  }\n  _defineProperty(StripeCardCvcComponent, \"\\u0275fac\", function StripeCardCvcComponent_Factory(t) {\n    return new (t || StripeCardCvcComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n  });\n  _defineProperty(StripeCardCvcComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeCardCvcComponent,\n    selectors: [[\"ngx-stripe-card-cvc\"]],\n    contentQueries: function StripeCardCvcComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeCardCvcComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeCardCvcComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeCardCvcComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeCardCvcComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeEpsBankComponent = /*#__PURE__*/(() => {\n  class StripeEpsBankComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this16 = this;\n      return _asyncToGenerator(function* () {\n        _this16.state = 'starting';\n        let updateElements = false;\n        if (!_this16.elementsProvider && (changes.elementsOptions || changes.stripe || !_this16.elements)) {\n          _this16.elements = yield _this16.stripeElementsService.elements(_this16.stripe, _this16.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this16.stripeElementsService.mergeOptions(_this16.options, _this16.containerClass);\n        if (changes.options || changes.containerClass || !_this16.element || updateElements) {\n          if (_this16.element && !updateElements) {\n            _this16.update(options);\n          } else if (_this16.elements && updateElements) {\n            _this16.createElement(options);\n          }\n        }\n        _this16.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this17 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this17.stripeElementsService.mergeOptions(_this17.options, _this17.containerClass);\n        if (_this17.elementsProvider) {\n          _this17.elementsSubscription = _this17.elementsProvider.elements.subscribe(elements => {\n            _this17.elements = elements;\n            _this17.createElement(options);\n            _this17.state = 'ready';\n          });\n        } else if (_this17.state === 'notready') {\n          _this17.state = 'starting';\n          _this17.elements = yield _this17.stripeElementsService.elements(_this17.stripe).toPromise();\n          _this17.createElement(options);\n          _this17.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getEpsBankelement() {\n      return this.element;\n    }\n    createElement(options) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('epsBank', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeEpsBankComponent, \"\\u0275fac\", function StripeEpsBankComponent_Factory(t) {\n    return new (t || StripeEpsBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeEpsBankComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeEpsBankComponent,\n    selectors: [[\"ngx-stripe-eps-bank\"]],\n    contentQueries: function StripeEpsBankComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeEpsBankComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeEpsBankComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeEpsBankComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeEpsBankComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeFpxBankComponent = /*#__PURE__*/(() => {\n  class StripeFpxBankComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this18 = this;\n      return _asyncToGenerator(function* () {\n        _this18.state = 'starting';\n        let updateElements = false;\n        if (!_this18.elementsProvider && (changes.elementsOptions || changes.stripe || !_this18.elements)) {\n          _this18.elements = yield _this18.stripeElementsService.elements(_this18.stripe, _this18.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this18.stripeElementsService.mergeOptions(_this18.options, _this18.containerClass);\n        if (changes.options || changes.containerClass || !_this18.element || updateElements) {\n          if (_this18.element && !updateElements) {\n            _this18.update(options);\n          } else if (_this18.elements && updateElements) {\n            _this18.createElement(options);\n          }\n        }\n        _this18.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this19 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this19.stripeElementsService.mergeOptions(_this19.options, _this19.containerClass);\n        if (_this19.elementsProvider) {\n          _this19.elementsSubscription = _this19.elementsProvider.elements.subscribe(elements => {\n            _this19.elements = elements;\n            _this19.createElement(options);\n            _this19.state = 'ready';\n          });\n        } else if (_this19.state === 'notready') {\n          _this19.state = 'starting';\n          _this19.elements = yield _this19.stripeElementsService.elements(_this19.stripe).toPromise();\n          _this19.createElement(options);\n          _this19.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getFpxBank() {\n      return this.element;\n    }\n    createElement(options = {\n      accountHolderType: 'individual'\n    }) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('fpxBank', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeFpxBankComponent, \"\\u0275fac\", function StripeFpxBankComponent_Factory(t) {\n    return new (t || StripeFpxBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeFpxBankComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeFpxBankComponent,\n    selectors: [[\"ngx-stripe-fpx-bank\"]],\n    contentQueries: function StripeFpxBankComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeFpxBankComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeFpxBankComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeFpxBankComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeFpxBankComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeIbanComponent = /*#__PURE__*/(() => {\n  class StripeIbanComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this20 = this;\n      return _asyncToGenerator(function* () {\n        _this20.state = 'starting';\n        let updateElements = false;\n        if (!_this20.elementsProvider && (changes.elementsOptions || changes.stripe || !_this20.elements)) {\n          _this20.elements = yield _this20.stripeElementsService.elements(_this20.stripe, _this20.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this20.stripeElementsService.mergeOptions(_this20.options, _this20.containerClass);\n        if (changes.options || changes.containerClass || !_this20.element || updateElements) {\n          if (_this20.element && !updateElements) {\n            _this20.update(options);\n          } else if (_this20.elements && updateElements) {\n            _this20.createElement(options);\n          }\n        }\n        _this20.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this21 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this21.stripeElementsService.mergeOptions(_this21.options, _this21.containerClass);\n        if (_this21.elementsProvider) {\n          _this21.elementsSubscription = _this21.elementsProvider.elements.subscribe(elements => {\n            _this21.elements = elements;\n            _this21.createElement(options);\n            _this21.state = 'ready';\n          });\n        } else if (_this21.state === 'notready') {\n          _this21.state = 'starting';\n          _this21.elements = yield _this21.stripeElementsService.elements(_this21.stripe).toPromise();\n          _this21.createElement(options);\n          _this21.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getIban() {\n      return this.element;\n    }\n    createElement(options = {}) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('iban', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeIbanComponent, \"\\u0275fac\", function StripeIbanComponent_Factory(t) {\n    return new (t || StripeIbanComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeIbanComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIbanComponent,\n    selectors: [[\"ngx-stripe-iban\"]],\n    contentQueries: function StripeIbanComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIbanComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIbanComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeIbanComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeIbanComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeIdealBankComponent = /*#__PURE__*/(() => {\n  class StripeIdealBankComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this22 = this;\n      return _asyncToGenerator(function* () {\n        _this22.state = 'starting';\n        let updateElements = false;\n        if (!_this22.elementsProvider && (changes.elementsOptions || changes.stripe || !_this22.elements)) {\n          _this22.elements = yield _this22.stripeElementsService.elements(_this22.stripe, _this22.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this22.stripeElementsService.mergeOptions(_this22.options, _this22.containerClass);\n        if (changes.options || changes.containerClass || !_this22.element || updateElements) {\n          if (_this22.element && !updateElements) {\n            _this22.update(options);\n          } else if (_this22.elements && updateElements) {\n            _this22.createElement(options);\n          }\n        }\n        _this22.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this23 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this23.stripeElementsService.mergeOptions(_this23.options, _this23.containerClass);\n        if (_this23.elementsProvider) {\n          _this23.elementsSubscription = _this23.elementsProvider.elements.subscribe(elements => {\n            _this23.elements = elements;\n            _this23.createElement(options);\n            _this23.state = 'ready';\n          });\n        } else if (_this23.state === 'notready') {\n          _this23.state = 'starting';\n          _this23.elements = yield _this23.stripeElementsService.elements(_this23.stripe).toPromise();\n          _this23.createElement(options);\n          _this23.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getIdealBank() {\n      return this.element;\n    }\n    createElement(options = {}) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('idealBank', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeIdealBankComponent, \"\\u0275fac\", function StripeIdealBankComponent_Factory(t) {\n    return new (t || StripeIdealBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeIdealBankComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIdealBankComponent,\n    selectors: [[\"ngx-stripe-ideal-bank\"]],\n    contentQueries: function StripeIdealBankComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIdealBankComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIdealBankComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeIdealBankComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeIdealBankComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeIssuingCardCvcDisplayComponent = /*#__PURE__*/(() => {\n  class StripeIssuingCardCvcDisplayComponent {\n    constructor(cdr, stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.cdr = cdr;\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this24 = this;\n      return _asyncToGenerator(function* () {\n        _this24.state = 'starting';\n        let updateElements = false;\n        if (!_this24.elementsProvider && (changes.elementsOptions || changes.stripe || !_this24.elements)) {\n          _this24.elements = yield _this24.stripeElementsService.elements(_this24.stripe, _this24.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this24.stripeElementsService.mergeOptions(_this24.options, _this24.containerClass);\n        if (changes.options || changes.containerClass || !_this24.element || updateElements) {\n          if (_this24.element && !updateElements) {\n            _this24.update(options);\n          } else if (_this24.elements && updateElements) {\n            _this24.createElement(options);\n          }\n        }\n      })();\n    }\n    ngOnInit() {\n      var _this25 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this25.stripeElementsService.mergeOptions(_this25.options, _this25.containerClass);\n        if (_this25.elementsProvider) {\n          _this25.elementsSubscription = _this25.elementsProvider.elements.subscribe(elements => {\n            _this25.elements = elements;\n            _this25.createElement(options);\n          });\n        } else if (_this25.state === 'notready') {\n          _this25.state = 'starting';\n          _this25.elements = yield _this25.stripeElementsService.elements(_this25.stripe).toPromise();\n          _this25.createElement(options);\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    createElement(options) {\n      this.state = 'ready';\n      this.cdr.detectChanges();\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('issuingCardCvcDisplay', options);\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeIssuingCardCvcDisplayComponent, \"\\u0275fac\", function StripeIssuingCardCvcDisplayComponent_Factory(t) {\n    return new (t || StripeIssuingCardCvcDisplayComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeIssuingCardCvcDisplayComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIssuingCardCvcDisplayComponent,\n    selectors: [[\"ngx-stripe-issuing-card-cvc-display\"]],\n    contentQueries: function StripeIssuingCardCvcDisplayComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIssuingCardCvcDisplayComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIssuingCardCvcDisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeIssuingCardCvcDisplayComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeIssuingCardCvcDisplayComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeIssuingCardExpiryDisplayComponent = /*#__PURE__*/(() => {\n  class StripeIssuingCardExpiryDisplayComponent {\n    constructor(cdr, stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.cdr = cdr;\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this26 = this;\n      return _asyncToGenerator(function* () {\n        _this26.state = 'starting';\n        let updateElements = false;\n        if (!_this26.elementsProvider && (changes.elementsOptions || changes.stripe || !_this26.elements)) {\n          _this26.elements = yield _this26.stripeElementsService.elements(_this26.stripe, _this26.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this26.stripeElementsService.mergeOptions(_this26.options, _this26.containerClass);\n        if (changes.options || changes.containerClass || !_this26.element || updateElements) {\n          if (_this26.element && !updateElements) {\n            _this26.update(options);\n          } else if (_this26.elements && updateElements) {\n            _this26.createElement(options);\n          }\n        }\n      })();\n    }\n    ngOnInit() {\n      var _this27 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this27.stripeElementsService.mergeOptions(_this27.options, _this27.containerClass);\n        if (_this27.elementsProvider) {\n          _this27.elementsSubscription = _this27.elementsProvider.elements.subscribe(elements => {\n            _this27.elements = elements;\n            _this27.createElement(options);\n          });\n        } else if (_this27.state === 'notready') {\n          _this27.state = 'starting';\n          _this27.elements = yield _this27.stripeElementsService.elements(_this27.stripe).toPromise();\n          _this27.createElement(options);\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    createElement(options) {\n      this.state = 'ready';\n      this.cdr.detectChanges();\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('issuingCardExpiryDisplay', options);\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeIssuingCardExpiryDisplayComponent, \"\\u0275fac\", function StripeIssuingCardExpiryDisplayComponent_Factory(t) {\n    return new (t || StripeIssuingCardExpiryDisplayComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeIssuingCardExpiryDisplayComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIssuingCardExpiryDisplayComponent,\n    selectors: [[\"ngx-stripe-issuing-card-expiry-display\"]],\n    contentQueries: function StripeIssuingCardExpiryDisplayComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIssuingCardExpiryDisplayComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIssuingCardExpiryDisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeIssuingCardExpiryDisplayComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeIssuingCardExpiryDisplayComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeIssuingCardNumberDisplayComponent = /*#__PURE__*/(() => {\n  class StripeIssuingCardNumberDisplayComponent {\n    constructor(cdr, stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.cdr = cdr;\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this28 = this;\n      return _asyncToGenerator(function* () {\n        _this28.state = 'starting';\n        let updateElements = false;\n        if (!_this28.elementsProvider && (changes.elementsOptions || changes.stripe || !_this28.elements)) {\n          _this28.elements = yield _this28.stripeElementsService.elements(_this28.stripe, _this28.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this28.stripeElementsService.mergeOptions(_this28.options, _this28.containerClass);\n        if (changes.options || changes.containerClass || !_this28.element || updateElements) {\n          if (_this28.element && !updateElements) {\n            _this28.update(options);\n          } else if (_this28.elements && updateElements) {\n            _this28.createElement(options);\n          }\n        }\n      })();\n    }\n    ngOnInit() {\n      var _this29 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this29.stripeElementsService.mergeOptions(_this29.options, _this29.containerClass);\n        if (_this29.elementsProvider) {\n          _this29.elementsSubscription = _this29.elementsProvider.elements.subscribe(elements => {\n            _this29.elements = elements;\n            _this29.createElement(options);\n          });\n        } else if (_this29.state === 'notready') {\n          _this29.state = 'starting';\n          _this29.elements = yield _this29.stripeElementsService.elements(_this29.stripe).toPromise();\n          _this29.createElement(options);\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    createElement(options) {\n      this.state = 'ready';\n      this.cdr.detectChanges();\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('issuingCardNumberDisplay', options);\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeIssuingCardNumberDisplayComponent, \"\\u0275fac\", function StripeIssuingCardNumberDisplayComponent_Factory(t) {\n    return new (t || StripeIssuingCardNumberDisplayComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeIssuingCardNumberDisplayComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIssuingCardNumberDisplayComponent,\n    selectors: [[\"ngx-stripe-issuing-card-number-display\"]],\n    contentQueries: function StripeIssuingCardNumberDisplayComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIssuingCardNumberDisplayComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIssuingCardNumberDisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeIssuingCardNumberDisplayComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeIssuingCardNumberDisplayComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeIssuingCardPinDisplayComponent = /*#__PURE__*/(() => {\n  class StripeIssuingCardPinDisplayComponent {\n    constructor(cdr, stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"cdr\", void 0);\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.cdr = cdr;\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this30 = this;\n      return _asyncToGenerator(function* () {\n        _this30.state = 'starting';\n        let updateElements = false;\n        if (!_this30.elementsProvider && (changes.elementsOptions || changes.stripe || !_this30.elements)) {\n          _this30.elements = yield _this30.stripeElementsService.elements(_this30.stripe, _this30.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this30.stripeElementsService.mergeOptions(_this30.options, _this30.containerClass);\n        if (changes.options || changes.containerClass || !_this30.element || updateElements) {\n          if (_this30.element && !updateElements) {\n            _this30.update(options);\n          } else if (_this30.elements && updateElements) {\n            _this30.createElement(options);\n          }\n        }\n      })();\n    }\n    ngOnInit() {\n      var _this31 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this31.stripeElementsService.mergeOptions(_this31.options, _this31.containerClass);\n        if (_this31.elementsProvider) {\n          _this31.elementsSubscription = _this31.elementsProvider.elements.subscribe(elements => {\n            _this31.elements = elements;\n            _this31.createElement(options);\n          });\n        } else if (_this31.state === 'notready') {\n          _this31.state = 'starting';\n          _this31.elements = yield _this31.stripeElementsService.elements(_this31.stripe).toPromise();\n          _this31.createElement(options);\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    createElement(options) {\n      this.state = 'ready';\n      this.cdr.detectChanges();\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('issuingCardPinDisplay', options);\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeIssuingCardPinDisplayComponent, \"\\u0275fac\", function StripeIssuingCardPinDisplayComponent_Factory(t) {\n    return new (t || StripeIssuingCardPinDisplayComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeIssuingCardPinDisplayComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeIssuingCardPinDisplayComponent,\n    selectors: [[\"ngx-stripe-issuing-card-pin-display\"]],\n    contentQueries: function StripeIssuingCardPinDisplayComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeIssuingCardPinDisplayComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeIssuingCardPinDisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeIssuingCardPinDisplayComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeIssuingCardPinDisplayComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeLinkAuthenticationComponent = /*#__PURE__*/(() => {\n  class StripeLinkAuthenticationComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"loaderror\", new EventEmitter());\n      _defineProperty(this, \"loaderstart\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this32 = this;\n      return _asyncToGenerator(function* () {\n        _this32.state = 'starting';\n        let updateElements = false;\n        if (!_this32.elementsProvider && (changes.elementsOptions || changes.stripe || !_this32.elements)) {\n          _this32.elements = yield _this32.stripeElementsService.elements(_this32.stripe, _this32.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this32.stripeElementsService.mergeOptions(_this32.options, _this32.containerClass);\n        if (changes.options || changes.containerClass || !_this32.element || updateElements) {\n          if (_this32.elements && updateElements) {\n            _this32.createElement(options);\n          }\n        }\n        _this32.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this33 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this33.stripeElementsService.mergeOptions(_this33.options, _this33.containerClass);\n        if (_this33.elementsProvider) {\n          _this33.elementsSubscription = _this33.elementsProvider.elements.subscribe(elements => {\n            _this33.elements = elements;\n            _this33.createElement(options);\n            _this33.state = 'ready';\n          });\n        } else if (_this33.state === 'notready') {\n          _this33.state = 'starting';\n          _this33.elements = yield _this33.stripeElementsService.elements(_this33.stripe).toPromise();\n          _this33.createElement(options);\n          _this33.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    /**\n     * @deprecated\n     */\n    getLinkAuthenticationElement() {\n      return this.element;\n    }\n    createElement(options) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('linkAuthentication', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.on('loaderror', () => this.loaderror.emit());\n      this.element.on('loaderstart', () => this.loaderstart.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeLinkAuthenticationComponent, \"\\u0275fac\", function StripeLinkAuthenticationComponent_Factory(t) {\n    return new (t || StripeLinkAuthenticationComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeLinkAuthenticationComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeLinkAuthenticationComponent,\n    selectors: [[\"ngx-stripe-link-authentication\"]],\n    contentQueries: function StripeLinkAuthenticationComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeLinkAuthenticationComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\",\n      loaderror: \"loaderror\",\n      loaderstart: \"loaderstart\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeLinkAuthenticationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeLinkAuthenticationComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeLinkAuthenticationComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeP24BankComponent = /*#__PURE__*/(() => {\n  class StripeP24BankComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this34 = this;\n      return _asyncToGenerator(function* () {\n        _this34.state = 'starting';\n        let updateElements = false;\n        if (!_this34.elementsProvider && (changes.elementsOptions || changes.stripe || !_this34.elements)) {\n          _this34.elements = yield _this34.stripeElementsService.elements(_this34.stripe, _this34.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this34.stripeElementsService.mergeOptions(_this34.options, _this34.containerClass);\n        if (changes.options || changes.containerClass || !_this34.element || updateElements) {\n          if (_this34.element && !updateElements) {\n            _this34.update(options);\n          } else if (_this34.elements && updateElements) {\n            _this34.createElement(options);\n          }\n        }\n        _this34.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this35 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this35.stripeElementsService.mergeOptions(_this35.options, _this35.containerClass);\n        if (_this35.elementsProvider) {\n          _this35.elementsSubscription = _this35.elementsProvider.elements.subscribe(elements => {\n            _this35.elements = elements;\n            _this35.createElement(options);\n            _this35.state = 'ready';\n          });\n        } else if (_this35.state === 'notready') {\n          _this35.state = 'starting';\n          _this35.elements = yield _this35.stripeElementsService.elements(_this35.stripe).toPromise();\n          _this35.createElement(options);\n          _this35.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getP24Bankelement() {\n      return this.element;\n    }\n    createElement(options) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('p24Bank', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeP24BankComponent, \"\\u0275fac\", function StripeP24BankComponent_Factory(t) {\n    return new (t || StripeP24BankComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeP24BankComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeP24BankComponent,\n    selectors: [[\"ngx-stripe-p24-bank\"]],\n    contentQueries: function StripeP24BankComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeP24BankComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeP24BankComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeP24BankComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeP24BankComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeAuBankAccountComponent = /*#__PURE__*/(() => {\n  class StripeAuBankAccountComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this36 = this;\n      return _asyncToGenerator(function* () {\n        _this36.state = 'starting';\n        let updateElements = false;\n        if (!_this36.elementsProvider && (changes.elementsOptions || changes.stripe || !_this36.elements)) {\n          _this36.elements = yield _this36.stripeElementsService.elements(_this36.stripe, _this36.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this36.stripeElementsService.mergeOptions(_this36.options, _this36.containerClass);\n        if (changes.options || changes.containerClass || !_this36.element || updateElements) {\n          if (_this36.element && !updateElements) {\n            _this36.update(options);\n          } else if (_this36.elements && updateElements) {\n            _this36.createElement(options);\n          }\n        }\n        _this36.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this37 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this37.stripeElementsService.mergeOptions(_this37.options, _this37.containerClass);\n        if (_this37.elementsProvider) {\n          _this37.elementsSubscription = _this37.elementsProvider.elements.subscribe(elements => {\n            _this37.elements = elements;\n            _this37.createElement(options);\n            _this37.state = 'ready';\n          });\n        } else if (_this37.state === 'notready') {\n          _this37.state = 'starting';\n          _this37.elements = yield _this37.stripeElementsService.elements(_this37.stripe).toPromise();\n          _this37.createElement(options);\n          _this37.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getAuBankAccount() {\n      return this.element;\n    }\n    createElement(options = {}) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('auBankAccount', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripeAuBankAccountComponent, \"\\u0275fac\", function StripeAuBankAccountComponent_Factory(t) {\n    return new (t || StripeAuBankAccountComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripeAuBankAccountComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripeAuBankAccountComponent,\n    selectors: [[\"ngx-stripe-au-bank-account\"]],\n    contentQueries: function StripeAuBankAccountComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripeAuBankAccountComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripeAuBankAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripeAuBankAccountComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripeAuBankAccountComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripePaymentElementComponent = /*#__PURE__*/(() => {\n  class StripePaymentElementComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"appearance\", void 0);\n      _defineProperty(this, \"clientSecret\", void 0);\n      _defineProperty(this, \"doNotCreateUntilClientSecretIsSet\", false);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"escape\", new EventEmitter());\n      _defineProperty(this, \"loaderror\", new EventEmitter());\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this38 = this;\n      return _asyncToGenerator(function* () {\n        _this38.state = 'starting';\n        let updateElements = false;\n        if (!_this38.elementsProvider && (changes.elementsOptions || changes.stripe || changes.clientSecret || changes.appearance || !_this38.elements)) {\n          _this38.elements = yield _this38.stripeElementsService.elements(_this38.stripe, {\n            ...(_this38.elementsOptions || {}),\n            ...(_this38.appearance ? {\n              appearance: _this38.appearance\n            } : {}),\n            ...(_this38.clientSecret ? {\n              clientSecret: _this38.clientSecret\n            } : {})\n          }).toPromise();\n          updateElements = true;\n        }\n        const options = _this38.stripeElementsService.mergeOptions(_this38.options, _this38.containerClass);\n        if (changes.options || changes.containerClass || !_this38.element || updateElements) {\n          if (_this38.element && !updateElements) {\n            _this38.update(options);\n          } else if (_this38.elements && updateElements) {\n            _this38.createElement(options);\n          }\n        }\n        _this38.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this39 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this39.stripeElementsService.mergeOptions(_this39.options, _this39.containerClass);\n        if (_this39.elementsProvider) {\n          _this39.elementsSubscription = _this39.elementsProvider.elements.subscribe(elements => {\n            _this39.elements = elements;\n            _this39.createElement(options);\n            _this39.state = 'ready';\n          });\n        } else if (_this39.state === 'notready') {\n          _this39.state = 'starting';\n          _this39.elements = yield _this39.stripeElementsService.elements(_this39.stripe, {\n            ...(_this39.elementsOptions || {}),\n            ...(_this39.appearance ? {\n              appearance: _this39.appearance\n            } : {}),\n            ...(_this39.clientSecret ? {\n              clientSecret: _this39.clientSecret\n            } : {})\n          }).toPromise();\n          _this39.createElement(options);\n          _this39.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      return this.element.update(options);\n    }\n    collapse() {\n      return this.element.collapse();\n    }\n    fetchUpdates() {\n      return from(this.elements.fetchUpdates());\n    }\n    createElement(options = {}) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      try {\n        this.element = this.elements.create('payment', options);\n      } catch (err) {\n        this.elements = null;\n        throw err;\n      }\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', ev => this.blur.emit(ev));\n      this.element.on('focus', ev => this.focus.emit(ev));\n      this.element.on('ready', ev => this.ready.emit(ev));\n      this.element.on('escape', ev => this.escape.emit(ev));\n      this.element.on('loaderror', ev => this.loaderror.emit(ev));\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripePaymentElementComponent, \"\\u0275fac\", function StripePaymentElementComponent_Factory(t) {\n    return new (t || StripePaymentElementComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripePaymentElementComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripePaymentElementComponent,\n    selectors: [[\"ngx-stripe-payment\"]],\n    viewQuery: function StripePaymentElementComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\",\n      appearance: \"appearance\",\n      clientSecret: \"clientSecret\",\n      doNotCreateUntilClientSecretIsSet: \"doNotCreateUntilClientSecretIsSet\"\n    },\n    outputs: {\n      load: \"load\",\n      blur: \"blur\",\n      change: \"change\",\n      focus: \"focus\",\n      ready: \"ready\",\n      escape: \"escape\",\n      loaderror: \"loaderror\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]],\n    template: function StripePaymentElementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0, 1);\n      }\n    },\n    dependencies: [CommonModule],\n    encapsulation: 2\n  }));\n  return StripePaymentElementComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripePaymentMethodMessagingComponent = /*#__PURE__*/(() => {\n  class StripePaymentMethodMessagingComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"loadingTemplate\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this40 = this;\n      return _asyncToGenerator(function* () {\n        _this40.state = 'starting';\n        let updateElements = false;\n        if (!_this40.elementsProvider && (changes.elementsOptions || changes.stripe || !_this40.elements)) {\n          _this40.elements = yield _this40.stripeElementsService.elements(_this40.stripe, _this40.elementsOptions).toPromise();\n          updateElements = true;\n        }\n        const options = _this40.stripeElementsService.mergeOptions(_this40.options, _this40.containerClass);\n        if (changes.options || changes.containerClass || !_this40.element || updateElements) {\n          if (_this40.element && !updateElements) {\n            _this40.update(options);\n          } else if (_this40.elements && updateElements) {\n            _this40.createElement(options);\n          }\n        }\n        _this40.state = 'ready';\n      })();\n    }\n    ngOnInit() {\n      var _this41 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this41.stripeElementsService.mergeOptions(_this41.options, _this41.containerClass);\n        if (_this41.elementsProvider) {\n          _this41.elementsSubscription = _this41.elementsProvider.elements.subscribe(elements => {\n            _this41.elements = elements;\n            _this41.createElement(options);\n            _this41.state = 'ready';\n          });\n        } else if (_this41.state === 'notready') {\n          _this41.state = 'starting';\n          _this41.elements = yield _this41.stripeElementsService.elements(_this41.stripe).toPromise();\n          _this41.createElement(options);\n          _this41.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getPaymentMethodMessaging() {\n      return this.element;\n    }\n    createElement(options) {\n      if (this.element) {\n        this.element.unmount();\n      }\n      this.element = this.elements.create('paymentMethodMessaging', options);\n      this.element.on('ready', () => this.ready.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n  _defineProperty(StripePaymentMethodMessagingComponent, \"\\u0275fac\", function StripePaymentMethodMessagingComponent_Factory(t) {\n    return new (t || StripePaymentMethodMessagingComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripePaymentMethodMessagingComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripePaymentMethodMessagingComponent,\n    selectors: [[\"ngx-stripe-payment-method-messaging\"]],\n    contentQueries: function StripePaymentMethodMessagingComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n      }\n    },\n    viewQuery: function StripePaymentMethodMessagingComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      ready: \"ready\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n    template: function StripePaymentMethodMessagingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵtemplate(2, StripePaymentMethodMessagingComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n    encapsulation: 2\n  }));\n  return StripePaymentMethodMessagingComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripePaymentRequestButtonComponent = /*#__PURE__*/(() => {\n  class StripePaymentRequestButtonComponent {\n    constructor(stripeElementsService, elementsProvider) {\n      _defineProperty(this, \"stripeElementsService\", void 0);\n      _defineProperty(this, \"elementsProvider\", void 0);\n      _defineProperty(this, \"stripeElementRef\", void 0);\n      _defineProperty(this, \"element\", void 0);\n      _defineProperty(this, \"paymentRequest\", void 0);\n      _defineProperty(this, \"containerClass\", void 0);\n      _defineProperty(this, \"paymentOptions\", void 0);\n      _defineProperty(this, \"options\", void 0);\n      _defineProperty(this, \"elementsOptions\", void 0);\n      _defineProperty(this, \"stripe\", void 0);\n      _defineProperty(this, \"load\", new EventEmitter());\n      _defineProperty(this, \"change\", new EventEmitter());\n      _defineProperty(this, \"blur\", new EventEmitter());\n      _defineProperty(this, \"focus\", new EventEmitter());\n      _defineProperty(this, \"ready\", new EventEmitter());\n      _defineProperty(this, \"token\", new EventEmitter());\n      _defineProperty(this, \"paymentMethod\", new EventEmitter());\n      _defineProperty(this, \"source\", new EventEmitter());\n      _defineProperty(this, \"cancel\", new EventEmitter());\n      _defineProperty(this, \"shippingaddresschange\", new EventEmitter());\n      _defineProperty(this, \"shippingoptionchange\", new EventEmitter());\n      _defineProperty(this, \"notavailable\", new EventEmitter());\n      _defineProperty(this, \"elements\", void 0);\n      _defineProperty(this, \"state\", 'notready');\n      _defineProperty(this, \"elementsSubscription\", void 0);\n      this.stripeElementsService = stripeElementsService;\n      this.elementsProvider = elementsProvider;\n    }\n    ngOnChanges(changes) {\n      var _this42 = this;\n      return _asyncToGenerator(function* () {\n        let updateElements = false;\n        if (!_this42.elementsProvider && (changes.elementsOptions || changes.stripe || !_this42.elements)) {\n          const elements = yield _this42.stripeElementsService.elements(_this42.stripe, _this42.elementsOptions).toPromise();\n          _this42.elements = elements;\n          updateElements = true;\n        }\n        if (changes.paymentOptions && _this42.paymentRequest) {\n          _this42.updateRequest(_this42.paymentOptions);\n        }\n        const options = _this42.stripeElementsService.mergeOptions(_this42.options, _this42.containerClass);\n        if (changes.options || changes.containerClass || !_this42.element || updateElements) {\n          if (_this42.element && !updateElements) {\n            _this42.update(options);\n          } else if (_this42.elements && updateElements) {\n            _this42.createElement(options);\n          }\n        }\n      })();\n    }\n    ngOnInit() {\n      var _this43 = this;\n      return _asyncToGenerator(function* () {\n        const options = _this43.stripeElementsService.mergeOptions(_this43.options, _this43.containerClass);\n        if (_this43.elementsProvider) {\n          _this43.elementsSubscription = _this43.elementsProvider.elements.subscribe(elements => {\n            _this43.elements = elements;\n            _this43.createElement(options);\n            _this43.state = 'ready';\n          });\n        } else if (_this43.state === 'notready') {\n          _this43.state = 'starting';\n          _this43.elements = yield _this43.stripeElementsService.elements(_this43.stripe).toPromise();\n          _this43.createElement(options);\n          _this43.state = 'ready';\n        }\n      })();\n    }\n    ngOnDestroy() {\n      if (this.element) {\n        this.element.destroy();\n      }\n      if (this.elementsSubscription) {\n        this.elementsSubscription.unsubscribe();\n      }\n    }\n    canMakePayment() {\n      return from(this.paymentRequest.canMakePayment());\n    }\n    update(options) {\n      this.element.update(options);\n    }\n    updateRequest(options) {\n      const {\n        currency,\n        total,\n        displayItems,\n        shippingOptions\n      } = options;\n      this.paymentRequest.update({\n        currency,\n        total,\n        displayItems,\n        shippingOptions\n      });\n    }\n    show() {\n      this.paymentRequest.show();\n    }\n    abort() {\n      this.paymentRequest.abort();\n    }\n    isShowing() {\n      return this.paymentRequest.isShowing();\n    }\n    /**\n     * @deprecated\n     */\n    getButton() {\n      return this.element;\n    }\n    createElement(options = {}) {\n      var _this44 = this;\n      return _asyncToGenerator(function* () {\n        _this44.paymentRequest = _this44.stripeElementsService.paymentRequest(_this44.stripe, _this44.paymentOptions);\n        _this44.paymentRequest.on('token', ev => _this44.token.emit(ev));\n        if (_this44.paymentMethod.observed) _this44.paymentRequest.on('paymentmethod', ev => _this44.paymentMethod.emit(ev));\n        if (_this44.source.observed && !_this44.paymentMethod.observed) _this44.paymentRequest.on('source', ev => _this44.source.emit(ev));\n        _this44.paymentRequest.on('cancel', () => _this44.cancel.emit());\n        _this44.paymentRequest.on('shippingaddresschange', ev => _this44.shippingaddresschange.emit(ev));\n        _this44.paymentRequest.on('shippingoptionchange', ev => _this44.shippingoptionchange.emit(ev));\n        if (_this44.element) {\n          _this44.element.unmount();\n        }\n        _this44.element = _this44.elements.create('paymentRequestButton', {\n          paymentRequest: _this44.paymentRequest,\n          ...options\n        });\n        const result = yield _this44.paymentRequest.canMakePayment();\n        if (result) {\n          _this44.element.on('click', ev => _this44.change.emit(ev));\n          _this44.element.on('blur', () => _this44.blur.emit());\n          _this44.element.on('focus', () => _this44.focus.emit());\n          _this44.element.on('ready', () => _this44.ready.emit());\n          _this44.element.mount(_this44.stripeElementRef.nativeElement);\n          _this44.load.emit({\n            paymentRequestButton: _this44.element,\n            paymentRequest: _this44.paymentRequest\n          });\n        } else {\n          _this44.notavailable.emit();\n        }\n      })();\n    }\n  }\n  _defineProperty(StripePaymentRequestButtonComponent, \"\\u0275fac\", function StripePaymentRequestButtonComponent_Factory(t) {\n    return new (t || StripePaymentRequestButtonComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeElementsDirective, 8));\n  });\n  _defineProperty(StripePaymentRequestButtonComponent, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: StripePaymentRequestButtonComponent,\n    selectors: [[\"ngx-stripe-payment-request-button\"]],\n    viewQuery: function StripePaymentRequestButtonComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\",\n      paymentOptions: \"paymentOptions\",\n      options: \"options\",\n      elementsOptions: \"elementsOptions\",\n      stripe: \"stripe\"\n    },\n    outputs: {\n      load: \"load\",\n      change: \"change\",\n      blur: \"blur\",\n      focus: \"focus\",\n      ready: \"ready\",\n      token: \"token\",\n      paymentMethod: \"paymentMethod\",\n      source: \"source\",\n      cancel: \"cancel\",\n      shippingaddresschange: \"shippingaddresschange\",\n      shippingoptionchange: \"shippingoptionchange\",\n      notavailable: \"notavailable\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]],\n    template: function StripePaymentRequestButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0, 1);\n      }\n    },\n    dependencies: [CommonModule],\n    encapsulation: 2\n  }));\n  return StripePaymentRequestButtonComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StripeFactoryService = /*#__PURE__*/(() => {\n  class StripeFactoryService {\n    constructor(version, baseKey, baseOptions, loader, window) {\n      _defineProperty(this, \"version\", void 0);\n      _defineProperty(this, \"baseKey\", void 0);\n      _defineProperty(this, \"baseOptions\", void 0);\n      _defineProperty(this, \"loader\", void 0);\n      _defineProperty(this, \"window\", void 0);\n      this.version = version;\n      this.baseKey = baseKey;\n      this.baseOptions = baseOptions;\n      this.loader = loader;\n      this.window = window;\n    }\n    create(key, options) {\n      if (!key && !this.baseKey) {\n        throw new Error('No key defined! Either you need to pass it as a parameter or define it when you call NgxStripeModule.forRoot()');\n      }\n      return new StripeInstance(this.version, this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n    }\n  }\n  _defineProperty(StripeFactoryService, \"\\u0275fac\", function StripeFactoryService_Factory(t) {\n    return new (t || StripeFactoryService)(i0.ɵɵinject(NGX_STRIPE_VERSION), i0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), i0.ɵɵinject(STRIPE_OPTIONS), i0.ɵɵinject(LazyStripeAPILoader), i0.ɵɵinject(WindowRef));\n  });\n  _defineProperty(StripeFactoryService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: StripeFactoryService,\n    factory: StripeFactoryService.ɵfac\n  }));\n  return StripeFactoryService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst components = [StripeAddressComponent, StripeAffirmMessageComponent, StripeAfterpayClearpayMessageComponent, StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeEpsBankComponent, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeIssuingCardCvcDisplayComponent, StripeIssuingCardExpiryDisplayComponent, StripeIssuingCardNumberDisplayComponent, StripeIssuingCardPinDisplayComponent, StripeLinkAuthenticationComponent, StripeP24BankComponent, StripeAuBankAccountComponent, StripePaymentElementComponent, StripePaymentMethodMessagingComponent, StripePaymentRequestButtonComponent];\nconst directives = [StripeCardGroupDirective, StripeElementsDirective, NgxStripeElementLoadingTemplateDirective];\nconst currentVersion = '16.1.2';\nlet NgxStripeModule = /*#__PURE__*/(() => {\n  class NgxStripeModule {\n    static forRoot(publishableKey, options) {\n      return {\n        ngModule: NgxStripeModule,\n        providers: [LazyStripeAPILoader, StripeService, StripeFactoryService, StripeElementsService, WindowRef, DocumentRef, {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        }, {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }, {\n          provide: NGX_STRIPE_VERSION,\n          useValue: currentVersion\n        }]\n      };\n    }\n    /**\n     * @deprecated\n     */\n    static forChild(publishableKey, options) {\n      return {\n        ngModule: NgxStripeModule,\n        providers: [LazyStripeAPILoader, StripeService, StripeFactoryService, StripeElementsService, WindowRef, DocumentRef, {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        }, {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }, {\n          provide: NGX_STRIPE_VERSION,\n          useValue: currentVersion\n        }]\n      };\n    }\n  }\n  _defineProperty(NgxStripeModule, \"\\u0275fac\", function NgxStripeModule_Factory(t) {\n    return new (t || NgxStripeModule)();\n  });\n  _defineProperty(NgxStripeModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxStripeModule\n  }));\n  _defineProperty(NgxStripeModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, components]\n  }));\n  return NgxStripeModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction injectStripe(publishableKey, options) {\n  if (publishableKey) {\n    const factory = inject(StripeFactoryService);\n    return factory.create(publishableKey, options);\n  } else if (inject(STRIPE_PUBLISHABLE_KEY)) {\n    return inject(StripeService);\n  }\n  throw new Error('Publishable Key is required either global or pass as parameter');\n}\n\n/*\n * Public API Surface of ngx-stripe\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DocumentRef, LazyStripeAPILoader, NGX_STRIPE_VERSION, NgxStripeElementLoadingTemplateDirective, NgxStripeModule, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY, StripeAddressComponent, StripeAffirmMessageComponent, StripeAfterpayClearpayMessageComponent, StripeAuBankAccountComponent, StripeCardComponent, StripeCardCvcComponent, StripeCardExpiryComponent, StripeCardGroupDirective, StripeCardNumberComponent, StripeElementsDirective, StripeElementsService, StripeEpsBankComponent, StripeFactoryService, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeInstance, StripeIssuingCardCvcDisplayComponent, StripeIssuingCardExpiryDisplayComponent, StripeIssuingCardNumberDisplayComponent, StripeIssuingCardPinDisplayComponent, StripeLinkAuthenticationComponent, StripeP24BankComponent, StripePaymentElementComponent, StripePaymentMethodMessagingComponent, StripePaymentRequestButtonComponent, StripeService, WindowRef, injectStripe };\n//# sourceMappingURL=ngx-stripe.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}