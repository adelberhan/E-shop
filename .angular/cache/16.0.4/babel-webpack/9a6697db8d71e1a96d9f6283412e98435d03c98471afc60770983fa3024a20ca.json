{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst TOKEN = 'jwtToken';\nexport let LocalStorageService = /*#__PURE__*/(() => {\n  class LocalStorageService {\n    constructor() {}\n    setToken(data) {\n      localStorage.setItem(TOKEN, data);\n    }\n    getToken() {\n      return localStorage.getItem(TOKEN);\n    }\n    removeToken() {\n      localStorage.removeItem(TOKEN);\n    }\n    isValidToken() {\n      const token = this.getToken();\n      if (token) {\n        const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n        return !this.token_exp(tokenDecode.exp);\n      } else {\n        return false;\n      }\n    }\n    token_exp(exp) {\n      return Math.floor(new Date().getTime() / 1000) >= exp;\n    }\n    // getIdFromToken() {\n    //   const token = this.getToken();\n    //   if (token) {\n    //     const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n    //     if (tokenDecode) {\n    //       return tokenDecode.userId;\n    //     } else {\n    //       // * if i got tokenDecode but not include the ID\n    //       return null;\n    //     }\n    //   } else {\n    //     // * if i did not got the token\n    //     return null;\n    //   }\n    // }\n    getIdFromToken() {\n      const token = this.getToken();\n      if (token) {\n        const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n        if (tokenDecode) {\n          return tokenDecode.userId;\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n  }\n  LocalStorageService.ɵfac = function LocalStorageService_Factory(t) {\n    return new (t || LocalStorageService)();\n  };\n  LocalStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalStorageService,\n    factory: LocalStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return LocalStorageService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}